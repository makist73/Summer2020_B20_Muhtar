06/06/2020 Muhtar
Topics: comments
        println & print
        escape sequences
        Variables intro
        Numeric primitives


warmup tasks:
    Task0:
        MAKE SURE YOU ALL HAVE JOINED:
                        #question_answer
                        #tasks_solutions
                        #replit
            THOSE CHALLENS IN SLACK

    Task01:
        1. create sub folder named "Day03" in the folder "B20 Java Class"
        2. Open intelliJ -> Summer2020_B20 and create new package "day03_sequences_Variables"
        3. create a class called EmployeeInfo:
                    print:
                        your company's name
                        your name
                        your EmployeeId
                        your JobTitle
                        your Salary



Summber2020_B20: for class use only
Self_Practices: extra practices
replit_Practices: for repl.its


Comments: giving notes. never effects the actual code fragment

        single-line comment: starts with //. ONLY for a single line
                        // comment goes here

        multi-line comments: starts with /*  and ends  with */. can have multiline

                   /*
                    comment1
                    comment2
                    comment3
                   */



two print statements: printing on the console

    System.out.println(): appends new line after printing  (prefered)

    System.out.print(): does not append new line after printing



Eescape sequences: MUST be given within ""

        \n: appends new line to the message
        \t: appends paragraph space
        \\: appends back slash
        \': appends '
        \": appends " (ONLY WAY)


Task:
    1. write a paragraph to tell us about yourself
            MUST include: favorite TV-Series, Books
                name of TV-Series and title of the books MUST be printed with “”
                your name MUST be printed within ''

AboutMyself


task:

        ^
       / \
      /   \
     /     \
    /       \
    ---------


    Triangle


task:
        ^
       / \
      /   \
     /     \
    /       \
    ---------
    \       /
     \     /
      \   /
       \ /
        v

Diamond


task:
        ^
       / \
      / * \
     / * * \
    / * * * \
    ---------
    \ * * * /
     \ * * /
      \ * /
       \ /
        v



variables: makes the data reusable

        declare variables:
            DataType  variableName = Data;

            0.3
            double a = 0.3;
            double TaxRate =0.3;

            rules for variable name:  MUST be readable & meanigful
                            1.  MUST be unique( cannot be duplicated)
                            2.  needs to start with letters
                            3.  cannot contain any special characters other than $ and _
                            4.  cannot be java reserved word
                            5.  if variable name contains more than one word, we apply camelCase

                            $num



    primitive datatype: byte, short, int, long, float, double, char, boolean

        for numbers:  byte, short, int, long, float, double
            for whole number (ONLY): byte, short, int, long  (int is prefered by compiler)
                        0, 1, 2,3,4,5....

            for decimal number: float, double  (double is prefered by compiler )
                    2.5, 3.5 ....



            double > float > long > int > short > byte

            large primitive CANNOT be assigned to smaller primitive
            smaller primitive CAN be assigned to larger primitives



    task:
        variables: salary, tax

                totalTax = salary * tax;
               salaryAfterTax =   salary - totalTax


               100000 ,     0.28;
                100000 * 0.28 = 28000;
                100000 - 28000 = 72000;


            double taxrate = 0.3;
            double taxRate =0.5;


            double totalsalaryaftertax = 100000;
            double totalSalaryAfterTax = 100000;


 Task: KgToPound
        write a program that can convert kg to lb
            1kg = 2.2lb

                75kg
        variable: kg, pound

                pound = kg*2.2;




tomorrow: char & boolean
          String
          Reveiw
